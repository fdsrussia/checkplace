package main

import (
	"fmt"
	"syscall"

	"golang.org/x/sys/windows"
)

func main() {
	// Определяет диски в системе.
	kernel32, _ := syscall.LoadLibrary("kernel32.dll")
	getLogicalDrivesHandle, _ := syscall.GetProcAddress(kernel32, "GetLogicalDrives")
	var drives []string
	if ret, _, callErr := syscall.Syscall(uintptr(getLogicalDrivesHandle), 0, 0, 0, 0); callErr != 0 {
		// handle error
	} else {
		drives = bitsToDrives(uint32(ret))
	}

	var freeBytesAvailable uint64
	var totalNumberOfBytes uint64
	var totalNumberOfFreeBytes uint64

	for i := 0; i < len(drives); i++ {
		err := windows.GetDiskFreeSpaceEx(windows.StringToUTF16Ptr(drives[i]+":"),
			&freeBytesAvailable, &totalNumberOfBytes, &totalNumberOfFreeBytes)
		if err != nil {
		}
		fmt.Println("Диск ", drives[i], ": - ", totalNumberOfBytes)

	}

}

// Определяет диски
func bitsToDrives(bitMap uint32) (drives []string) {
	availableDrives := []string{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"}
	for i := range availableDrives {
		if bitMap&1 == 1 {
			drives = append(drives, availableDrives[i])
		}
		bitMap >>= 1
	}
	return
}
